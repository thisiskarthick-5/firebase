<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Firebase Auth with Admin Panel</title>
  <style>
    body {
      font-family: "Segoe UI", Arial, sans-serif;
      background: linear-gradient(135deg, #74ebd5, #ACB6E5);
      height: 100vh;
      margin: 0;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .container {
      background: white;
      padding: 30px;
      border-radius: 15px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.2);
      width: 350px;
      max-width: 90%;
      text-align: center;
    }
    h2, h1 {
      margin-bottom: 20px;
      color: #333;
    }
    input {
      width: 100%;
      padding: 12px;
      margin: 10px 0;
      border-radius: 8px;
      border: 1px solid #ccc;
      font-size: 14px;
    }
    button {
      width: 100%;
      padding: 12px;
      margin-top: 10px;
      background: #007bff;
      border: none;
      color: white;
      font-size: 15px;
      border-radius: 8px;
      cursor: pointer;
      transition: 0.3s;
    }
    button:hover { background: #0056b3; }
    .link {
      margin-top: 15px;
      font-size: 14px;
    }
    .link a { color: #007bff; text-decoration: none; }
    .page { display: none; }
    .active { display: block; }
    /* Admin Table */
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 15px;
      font-size: 14px;
    }
    th, td {
      border: 1px solid #ddd;
      padding: 10px;
      text-align: center;
    }
    th {
      background: #007bff;
      color: white;
    }
    td input {
      width: 90%;
      padding: 5px;
      border-radius: 5px;
      border: 1px solid #ccc;
    }
    td button {
      padding: 6px 12px;
      background: #28a745;
      font-size: 13px;
    }
    td button:hover { background: #1e7e34; }
  </style>
</head>
<body>

  <!-- Login Page -->
  <div id="loginPage" class="container page active">
    <h2>Login</h2>
    <input type="email" id="loginEmail" placeholder="Email">
    <input type="password" id="loginPassword" placeholder="Password">
    <button id="loginBtn">Login</button>
    <div class="link">Don't have an account? <a href="#" onclick="showPage('signupPage')">Sign up</a></div>
  </div>

  <!-- Signup Page -->
  <div id="signupPage" class="container page">
    <h2>Sign Up</h2>
    <input type="email" id="signupEmail" placeholder="Email">
    <input type="password" id="signupPassword" placeholder="Password">
    <button id="signupBtn">Sign Up</button>
    <div class="link">Already have an account? <a href="#" onclick="showPage('loginPage')">Login</a></div>
  </div>

  <!-- Welcome Page -->
  <div id="welcomePage" class="container page">
    <h1>Welcome üéâ</h1>
    <p id="userEmail"></p>
    <button id="logoutBtn1">Logout</button>
  </div>

  <!-- Admin Page -->
  <div id="adminPage" class="container page" style="width:600px;">
    <h1>Admin Panel üë®‚Äçüíª</h1>
    <p id="adminEmail"></p>
    <table id="usersTable">
      <thead>
        <tr><th>Email</th><th>Location</th><th>Action</th></tr>
      </thead>
      <tbody></tbody>
    </table>
    <button id="logoutBtn2" style="margin-top:20px;">Logout</button>
  </div>

  <!-- Firebase SDK -->
  <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-app.js";
    import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged }
      from "https://www.gstatic.com/firebasejs/9.6.10/firebase-auth.js";
    import { getFirestore, collection, getDocs, updateDoc, doc, setDoc }
      from "https://www.gstatic.com/firebasejs/9.6.10/firebase-firestore.js";

    // Firebase Config
    const firebaseConfig = {
      apiKey: "AIzaSyDcZJgoPOAUGujWD6a8GFTxYhCzFAfS5Gg",
      authDomain: "datahandling-84718.firebaseapp.com",
      projectId: "datahandling-84718",
      storageBucket: "datahandling-84718.appspot.com",
      messagingSenderId: "141955322888",
      appId: "1:141955322888:web:57029968fb68a6bfa36dbd",
      measurementId: "G-9D2VSE2CBX"
    };

    // Init Firebase
    const app = initializeApp(firebaseConfig);
    const auth = getAuth(app);
    const db = getFirestore(app);

    // Switch Pages
    window.showPage = function(pageId) {
      document.querySelectorAll('.page').forEach(p => p.classList.remove('active'));
      document.getElementById(pageId).classList.add('active');
    }

    // Signup
    document.getElementById("signupBtn").addEventListener("click", async () => {
      const email = document.getElementById("signupEmail").value;
      const password = document.getElementById("signupPassword").value;
      try {
        await createUserWithEmailAndPassword(auth, email, password);
        await setDoc(doc(db, "users", email), { email: email, location: "Unknown" });
        alert("Signup successful! Please login.");
        showPage("loginPage");
      } catch (err) {
        alert(err.message);
      }
    });

    // Login
    document.getElementById("loginBtn").addEventListener("click", async () => {
      const email = document.getElementById("loginEmail").value;
      const password = document.getElementById("loginPassword").value;
      try {
        await signInWithEmailAndPassword(auth, email, password);
      } catch (err) {
        alert("Login failed: " + err.message);
      }
    });

    // Logout
    document.getElementById("logoutBtn1").addEventListener("click", () => signOut(auth));
    document.getElementById("logoutBtn2").addEventListener("click", () => signOut(auth));

    // Load users table for admin
    async function loadUsersTable() {
      const tbody = document.querySelector("#usersTable tbody");
      tbody.innerHTML = "";
      const querySnapshot = await getDocs(collection(db, "users"));
      querySnapshot.forEach(docSnap => {
        const data = docSnap.data();
        const tr = document.createElement("tr");
        tr.innerHTML = `
          <td>${data.email}</td>
          <td><input type="text" value="${data.location}" id="loc-${data.email}"></td>
          <td><button onclick="updateLocation('${data.email}')">Save</button></td>
        `;
        tbody.appendChild(tr);
      });
    }

    // Update location (admin)
    window.updateLocation = async function(email) {
      const newLoc = document.getElementById(`loc-${email}`).value;
      await updateDoc(doc(db, "users", email), { location: newLoc });
      alert("Location updated for " + email);
    }

    // Auth Listener
    onAuthStateChanged(auth, async (user) => {
      if (user) {
        if (user.email === "karthick234@gmail.com") {
          document.getElementById("adminEmail").innerText = "Logged in as Admin: " + user.email;
          showPage("adminPage");
          loadUsersTable();
        } else {
          document.getElementById("userEmail").innerText = "Logged in as: " + user.email;
          showPage("welcomePage");
        }
      } else {
        showPage("loginPage");
      }
    });
  </script>
</body>
</html>
